{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { RECEIVE_ENTRIES, ADD_ENTRY, REMOVE_ENTRY } from \"../actions/index\";\nexport default function entries() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_ENTRIES:\n      return _objectSpread(_objectSpread({}, state), action.entries);\n\n    case ADD_ENTRY:\n      return _objectSpread(_objectSpread({}, state), action.entry);\n\n    case REMOVE_ENTRY:\n      var newState = {};\n      Object.keys(state).filter(function (e) {\n        e !== action.key;\n      }).map(function (e) {\n        newState[e] = state[e];\n      });\n      return newState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/xtratos/Documents/React-Developer-Nanodegree-Program/UdaciFitness/reducers/entries.js"],"names":["RECEIVE_ENTRIES","ADD_ENTRY","REMOVE_ENTRY","entries","state","action","type","entry","newState","Object","keys","filter","e","key","map"],"mappings":";;;;;;AAAA,SAASA,eAAT,EAA0BC,SAA1B,EAAqCC,YAArC;AAEA,eAAe,SAASC,OAAT,GAAqC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,eAAL;AACI,6CACOI,KADP,GAEOC,MAAM,CAACF,OAFd;;AAIJ,SAAKF,SAAL;AACI,6CACOG,KADP,GAEOC,MAAM,CAACE,KAFd;;AAIJ,SAAKL,YAAL;AACI,UAAMM,QAAQ,GAAG,EAAjB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYN,KAAZ,EACKO,MADL,CACY,UAACC,CAAD,EAAO;AAACA,QAAAA,CAAC,KAAKP,MAAM,CAACQ,GAAb;AAAiB,OADrC,EAEKC,GAFL,CAES,UAACF,CAAD,EAAO;AAACJ,QAAAA,QAAQ,CAACI,CAAD,CAAR,GAAcR,KAAK,CAACQ,CAAD,CAAnB;AAAuB,OAFxC;AAGA,aAAOJ,QAAP;;AACJ;AACI,aAAOJ,KAAP;AAlBR;AAoBH","sourcesContent":["import { RECEIVE_ENTRIES, ADD_ENTRY, REMOVE_ENTRY } from '../actions/index'\n\nexport default function entries(state = {}, action) {\n    switch(action.type) {\n        case RECEIVE_ENTRIES:\n            return {\n                ...state,\n                ...action.entries\n            };\n        case ADD_ENTRY:\n            return {\n                ...state,\n                ...action.entry\n            };\n        case REMOVE_ENTRY:\n            const newState = {}\n            Object.keys(state)\n                .filter((e) => {e !== action.key})\n                .map((e) => {newState[e] = state[e]})\n            return newState;\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}