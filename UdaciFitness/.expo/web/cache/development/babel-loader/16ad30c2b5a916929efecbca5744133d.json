{"ast":null,"code":"var _jsxFileName = \"/home/xtratos/Documents/React-Developer-Nanodegree-Program/UdaciFitness/utils/helpers.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { FontAwesome, MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { white } from \"./colors\";\nexport function isBetween(num, x, y) {\n  if (num >= x && num <= y) {\n    return true;\n  }\n\n  return false;\n}\nexport function calculateDirection(heading) {\n  var direction = '';\n\n  if (isBetween(heading, 0, 22.5)) {\n    direction = 'North';\n  } else if (isBetween(heading, 22.5, 67.5)) {\n    direction = 'North East';\n  } else if (isBetween(heading, 67.5, 112.5)) {\n    direction = 'East';\n  } else if (isBetween(heading, 112.5, 157.5)) {\n    direction = 'South East';\n  } else if (isBetween(heading, 157.5, 202.5)) {\n    direction = 'South';\n  } else if (isBetween(heading, 202.5, 247.5)) {\n    direction = 'South West';\n  } else if (isBetween(heading, 247.5, 292.5)) {\n    direction = 'West';\n  } else if (isBetween(heading, 292.5, 337.5)) {\n    direction = 'North West';\n  } else if (isBetween(heading, 337.5, 360)) {\n    direction = 'North';\n  } else {\n    direction = 'Calculating';\n  }\n\n  return direction;\n}\nexport function timeToString() {\n  var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n  var date = new Date(time);\n  var todayUTC = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  return todayUTC.toISOString().split('T')[0];\n}\nexport function getMetricMetaInfo(metric) {\n  var info = {\n    run: {\n      displayName: 'Run',\n      max: 50,\n      unit: 'miles',\n      step: 1,\n      type: 'steppers',\n      getIcon: function getIcon() {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }\n        }, React.createElement(MaterialIcons, {\n          name: \"directions-run\",\n          color: \"black\",\n          size: 35,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    bike: {\n      displayName: 'Bike',\n      max: 100,\n      unit: 'miles',\n      step: 1,\n      type: 'steppers',\n      getIcon: function getIcon() {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"bike\",\n          color: \"black\",\n          size: 35,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    swim: {\n      displayName: 'Swim',\n      max: 9900,\n      unit: 'meters',\n      step: 100,\n      type: 'steppers',\n      getIcon: function getIcon() {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"swim\",\n          color: \"black\",\n          size: 35,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    sleep: {\n      displayName: 'Sleep',\n      max: 24,\n      unit: 'hours',\n      step: 1,\n      type: 'slider',\n      getIcon: function getIcon() {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"bed\",\n          color: \"black\",\n          size: 35,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    eat: {\n      displayName: 'Eat',\n      max: 10,\n      unit: 'rating',\n      step: 1,\n      type: 'slider',\n      getIcon: function getIcon() {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"food\",\n          color: \"black\",\n          size: 35,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }\n        }));\n      }\n    }\n  };\n\n  if (metric) {\n    return info[metric];\n  } else {\n    return info;\n  }\n}\nexport function getDailyReminderValue() {\n  return {\n    today: \"Don't forget to log your data today\"\n  };\n}","map":{"version":3,"sources":["/home/xtratos/Documents/React-Developer-Nanodegree-Program/UdaciFitness/utils/helpers.js"],"names":["React","FontAwesome","MaterialIcons","MaterialCommunityIcons","white","isBetween","num","x","y","calculateDirection","heading","direction","timeToString","time","Date","now","date","todayUTC","UTC","getFullYear","getMonth","getDate","toISOString","split","getMetricMetaInfo","metric","info","run","displayName","max","unit","step","type","getIcon","bike","swim","sleep","eat","getDailyReminderValue","today"],"mappings":"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","sourcesContent":["// utils/helpers.js\nimport React from 'react';\nimport { View } from 'react-native';\nimport { FontAwesome, MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { white } from './colors';\n\nexport function isBetween (num, x, y) {\n    if (num >= x && num <= y) {\n        return true\n    }\n    return false\n}\n\nexport function calculateDirection (heading) {\n    let direction = ''\n    if (isBetween(heading, 0, 22.5)) {\n        direction = 'North'\n    } else if (isBetween(heading, 22.5, 67.5)) {\n        direction = 'North East'\n    } else if (isBetween(heading, 67.5, 112.5)) {\n        direction = 'East'\n    } else if (isBetween(heading, 112.5, 157.5)) {\n        direction = 'South East'\n    } else if (isBetween(heading, 157.5, 202.5)) {\n        direction = 'South'\n    } else if (isBetween(heading, 202.5, 247.5)) {\n        direction = 'South West'\n    } else if (isBetween(heading, 247.5, 292.5)) {\n        direction = 'West'\n    } else if (isBetween(heading, 292.5, 337.5)) {\n        direction = 'North West'\n    } else if (isBetween(heading, 337.5, 360)) {\n        direction = 'North'\n    } else {\n        direction = 'Calculating'\n    }\n    return direction\n}\n\nexport function timeToString (time = Date.now()) {\n    const date = new Date(time)\n    const todayUTC = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()))\n    return todayUTC.toISOString().split('T')[0]\n}\n\nexport function getMetricMetaInfo(metric) {\n    const info = {\n        run: {\n            displayName: 'Run',\n            max: 50,\n            unit: 'miles',\n            step: 1,\n            type: 'steppers',\n            getIcon() {\n                return (\n                    <View>\n                        <MaterialIcons\n                            name=\"directions-run\"\n                            color=\"black\"\n                            size={35}\n                        />\n                    </View>\n                )\n            }\n        },\n        bike: {\n            displayName: 'Bike',\n            max: 100,\n            unit: 'miles',\n            step: 1,\n            type: 'steppers',\n            getIcon() {\n                return (\n                    <View>\n                        <MaterialCommunityIcons\n                            name=\"bike\"\n                            color=\"black\"\n                            size={35}\n                        />\n                    </View>\n                )\n            }\n        },\n        swim: {\n            displayName: 'Swim',\n            max: 9900,\n            unit: 'meters',\n            step: 100,\n            type: 'steppers',\n            getIcon() {\n                return (\n                    <View>\n                        <MaterialCommunityIcons\n                            name=\"swim\"\n                            color=\"black\"\n                            size={35}\n                        />\n                    </View>\n                )\n            }\n        },\n        sleep: {\n            displayName: 'Sleep',\n            max: 24,\n            unit: 'hours',\n            step: 1,\n            type: 'slider',\n            getIcon() {\n                return (\n                    <View>\n                        <FontAwesome\n                            name=\"bed\"\n                            color=\"black\"\n                            size={35}\n                        />\n                    </View>\n                )\n            }\n        },\n        eat: {\n            displayName: 'Eat',\n            max: 10,\n            unit: 'rating',\n            step: 1,\n            type: 'slider',\n            getIcon() {\n                return (\n                    <View>\n                        <MaterialCommunityIcons\n                            name=\"food\"\n                            color=\"black\"\n                            size={35}\n                        />\n                    </View>\n                )\n            }\n        }\n    }\n\n    if (metric) {\n        return info[metric];\n    } else {\n        return info;\n    }\n}\n\nexport function getDailyReminderValue() {\n    return {\n        today: \"Don't forget to log your data today\"\n    }\n}"]},"metadata":{},"sourceType":"module"}